diff -uNr acse_1.1.0/acse/Acse.lex acse_1.1.0-array_assign/acse/Acse.lex
--- acse_1.1.0/acse/Acse.lex	2008-11-21 12:47:02.000000000 +0100
+++ acse_1.1.0-array_assign/acse/Acse.lex	2013-02-05 16:33:43.784639622 +0100
@@ -77,6 +77,7 @@
 "|"               { return OR_OP; }
 "!"               { return NOT_OP; }
 "="               { return ASSIGN; }
+":="              { return ARRAY_ASSIGN; }
 "<"               { return LT; }
 ">"               { return GT; }
 "<<"              { return SHL_OP; }
diff -uNr acse_1.1.0/acse/Acse.y acse_1.1.0-array_assign/acse/Acse.y
--- acse_1.1.0/acse/Acse.y	2008-12-23 17:02:28.000000000 +0100
+++ acse_1.1.0-array_assign/acse/Acse.y	2013-02-05 16:54:14.997979125 +0100
@@ -122,6 +122,7 @@
 %token RETURN
 %token READ
 %token WRITE
+%token ARRAY_ASSIGN
 
 %token <label> DO
 %token <while_stmt> WHILE
@@ -304,6 +305,45 @@
                /* free the memory associated with the IDENTIFIER */
                free($1);
             }
+            | IDENTIFIER ARRAY_ASSIGN IDENTIFIER
+            {
+              t_axe_variable *dest = getVariable(program, $1);
+              t_axe_variable *src = getVariable(program, $3);
+							
+              if (!dest->isArray || !src->isArray) {
+                fprintf(stderr, "Illegal array assignment!\n");
+                exit(-1);
+              }
+
+              int minSize = dest->arraySize < src->arraySize ? dest->arraySize
+                                                             : src->arraySize;
+
+              int cnt_reg = gen_load_immediate(program, minSize - 1);
+              t_axe_expression cnt_exp = create_expression(cnt_reg, REGISTER);
+
+              t_axe_label *loop_begin = assignNewLabel(program);
+              
+              int t = loadArrayElement(program, $3, cnt_exp);
+              t_axe_expression t_exp = create_expression(t, REGISTER);
+              storeArrayElement(program, $1, cnt_exp, t_exp);
+
+              gen_subi_instruction(program, cnt_reg, cnt_reg, 1);
+              gen_bge_instruction(program, loop_begin, 0);
+
+              if (dest->arraySize > minSize) {
+                gen_addi_instruction(program, cnt_reg, REG_0, 
+                                     dest->arraySize - 1);
+                
+                t_axe_label *zp_begin = assignNewLabel(program);
+                storeArrayElement(program, $1, cnt_exp, 
+                                  create_expression(0, IMMEDIATE));
+
+                gen_subi_instruction(program, cnt_reg, cnt_reg, 1);
+                gen_subi_instruction(program, getNewRegister(program),
+                                     cnt_reg, minSize);
+                gen_bge_instruction(program, zp_begin, 0);
+              }
+            }
 ;
             
 if_statement   : if_stmt
diff -uNr acse_1.1.0/tests/array_assign/padding.src acse_1.1.0-array_assign/tests/array_assign/padding.src
--- acse_1.1.0/tests/array_assign/padding.src	1970-01-01 01:00:00.000000000 +0100
+++ acse_1.1.0-array_assign/tests/array_assign/padding.src	2013-02-05 17:04:55.057982333 +0100
@@ -0,0 +1,18 @@
+int a[5];
+int b[3];
+
+int i=0;
+int t;
+do {
+	read(t);
+	b[i] = t;
+	i = i + 1;
+} while (i != 3);
+
+a := b;
+
+i = 0;
+do {
+	write(a[i]);
+	i = i + 1;
+} while (i != 5);
diff -uNr acse_1.1.0/tests/array_assign/simple.src acse_1.1.0-array_assign/tests/array_assign/simple.src
--- acse_1.1.0/tests/array_assign/simple.src	1970-01-01 01:00:00.000000000 +0100
+++ acse_1.1.0-array_assign/tests/array_assign/simple.src	2013-02-05 17:03:46.677981990 +0100
@@ -0,0 +1,18 @@
+int a[5];
+int b[5];
+
+int i=0;
+int t;
+do {
+	read(t);
+	b[i] = t;
+	i = i + 1;
+} while (i != 5);
+
+a := b;
+
+i = 0;
+do {
+	write(a[i]);
+	i = i + 1;
+} while (i != 5);
diff -uNr acse_1.1.0/tests/array_assign/truncate.src acse_1.1.0-array_assign/tests/array_assign/truncate.src
--- acse_1.1.0/tests/array_assign/truncate.src	1970-01-01 01:00:00.000000000 +0100
+++ acse_1.1.0-array_assign/tests/array_assign/truncate.src	2013-02-05 17:05:06.154649055 +0100
@@ -0,0 +1,18 @@
+int a[5];
+int b[8];
+
+int i=0;
+int t;
+do {
+	read(t);
+	b[i] = t;
+	i = i + 1;
+} while (i != 8);
+
+a := b;
+
+i = 0;
+do {
+	write(a[i]);
+	i = i + 1;
+} while (i != 5);
diff -uNr acse_1.1.0/tests/Makefile acse_1.1.0-array_assign/tests/Makefile
--- acse_1.1.0/tests/Makefile	2008-12-14 01:05:42.000000000 +0100
+++ acse_1.1.0-array_assign/tests/Makefile	2013-02-05 17:00:58.904647816 +0100
@@ -1,7 +1,7 @@
 asm=$(CURDIR)/../bin/asm
 acse=$(CURDIR)/../bin/acse
 export asm acse
-dirs:=arrays sum dowhile fact mult_table power semi assign arrays arrays2 misc
+dirs:=arrays sum dowhile fact mult_table power semi assign arrays arrays2 misc array_assign
 
 test :
 	for i in $(dirs); do $(MAKE) -C $$i -f ../Makefile.test ; done
