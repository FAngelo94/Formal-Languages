diff -uNr acse_1.1.0/acse/Acse.lex acse_1.1.0-array_comprehension/acse/Acse.lex
--- acse_1.1.0/acse/Acse.lex	2008-11-21 12:47:02.000000000 +0100
+++ acse_1.1.0-array_comprehension/acse/Acse.lex	2013-06-21 11:33:19.048626834 +0200
@@ -93,6 +93,7 @@
 "else"            { return ELSE; }
 "for"             { return FOR; }
 "if"              { return IF; }
+"in"              { return IN; }
 "int"             { yylval.intval = INTEGER_TYPE; return TYPE; }
 "while"           { return WHILE; }
 "return"          { return RETURN; }
diff -uNr acse_1.1.0/acse/Acse.y acse_1.1.0-array_comprehension/acse/Acse.y
--- acse_1.1.0/acse/Acse.y	2008-12-23 17:02:28.000000000 +0100
+++ acse_1.1.0-array_comprehension/acse/Acse.y	2013-06-21 12:48:04.581784276 +0200
@@ -90,6 +90,12 @@
 
 t_io_infos *file_infos;    /* input and output files used by the compiler */
 
+struct {
+  t_axe_label *body_label;
+  t_axe_label *cond_label;
+  int index_reg;
+} array_compr;
+
 %}
 
 %expect 1
@@ -122,6 +128,7 @@
 %token RETURN
 %token READ
 %token WRITE
+%token IN
 
 %token <label> DO
 %token <while_stmt> WHILE
@@ -304,6 +311,58 @@
                /* free the memory associated with the IDENTIFIER */
                free($1);
             }
+            | IDENTIFIER ASSIGN 
+            {
+              array_compr.cond_label = newLabel(program);
+              array_compr.index_reg = gen_load_immediate(program, 0);
+              gen_bt_instruction(program, array_compr.cond_label, 0);
+              array_compr.body_label = assignNewLabel(program);
+            }
+              LSQUARE exp 
+            {
+              int index_reg = array_compr.index_reg;
+              t_axe_expression index_expr =
+                create_expression(index_reg, REGISTER);
+              storeArrayElement(program, $1, index_expr, $5);
+              gen_addi_instruction(program, index_reg, index_reg, 1);
+            }
+              FOR IDENTIFIER IN IDENTIFIER RSQUARE
+            {
+              t_axe_variable *dest = getVariable(program, $1);
+              t_axe_variable *iv = getVariable(program, $8);
+              t_axe_variable *src = getVariable(program, $10);
+
+              if (!dest->isArray || iv->isArray || !src->isArray)
+                exit(-1);
+
+              t_axe_expression min_size = 
+                create_expression(dest->arraySize < src->arraySize ? 
+                                    dest->arraySize : src->arraySize,
+                                  IMMEDIATE);
+              
+
+              int iv_reg = get_symbol_location(program, $8, 0);
+              int index_reg = array_compr.index_reg;
+              t_axe_expression index_expr =
+                create_expression(index_reg, REGISTER);
+              t_axe_label *end_label = newLabel(program);
+
+              assignLabel(program, array_compr.cond_label);
+
+              t_axe_expression cmp = 
+                handle_binary_comparison(program, index_expr, min_size, _LT_);
+
+              gen_beq_instruction(program, end_label, 0);
+              
+              int elem = loadArrayElement(program, $10, index_expr);
+              gen_addi_instruction(program, iv_reg, elem, 0);
+
+              gen_bt_instruction(program, array_compr.body_label, 0);
+              assignLabel(program, end_label);
+              free($1);
+              free($8);
+              free($10);
+            }
 ;
             
 if_statement   : if_stmt
diff -uNr acse_1.1.0/tests/array_comprehension/test.src acse_1.1.0-array_comprehension/tests/array_comprehension/test.src
--- acse_1.1.0/tests/array_comprehension/test.src	1970-01-01 01:00:00.000000000 +0100
+++ acse_1.1.0-array_comprehension/tests/array_comprehension/test.src	2013-06-21 11:36:19.685286000 +0200
@@ -0,0 +1,19 @@
+int i;
+int a[5];
+int b[7];
+
+i = 0;
+while (i < 5) {
+	i = i + 1;
+	a[i - 1] = i;
+}
+
+
+
+b = [ i*i - 2 for i in a];
+
+i = 0;
+while (i < 7) {
+	write(b[i]);
+	i = i + 1;
+}
diff -uNr acse_1.1.0/tests/Makefile acse_1.1.0-array_comprehension/tests/Makefile
--- acse_1.1.0/tests/Makefile	2008-12-14 01:05:42.000000000 +0100
+++ acse_1.1.0-array_comprehension/tests/Makefile	2013-06-24 13:27:06.571528993 +0200
@@ -1,7 +1,7 @@
 asm=$(CURDIR)/../bin/asm
 acse=$(CURDIR)/../bin/acse
 export asm acse
-dirs:=arrays sum dowhile fact mult_table power semi assign arrays arrays2 misc
+dirs:=arrays sum dowhile fact mult_table power semi assign arrays arrays2 misc array_comprehension
 
 test :
 	for i in $(dirs); do $(MAKE) -C $$i -f ../Makefile.test ; done
